security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_USER:        ROLE_USER
        ROLE_ADMIN:       [ROLE_USER, ROLE_GRAPHIC, ROLE_ACCOUNT]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_GRAPHIC, ROLE_ACCOUNT, ROLE_ALLOWED_TO_SWITCH]
    providers:
        users_in_memory: { memory: null }
        users_db:
            entity: { class: App\Entity\Users, property: username }
    encoders:
        App\Entity\Users:
            algorithm: bcrypt
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
